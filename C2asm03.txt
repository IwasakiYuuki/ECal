C2asm03.txt
s15023 岩崎悠紀

1．課題
　次のＣプログラムを，アセンブリプログラムに変換して，主要部分を説明しなさい。また 4つの関数がどのようにアセンブリ言語に変換されているか違いを調べ，気づいた事柄・考察した事柄を述べなさい。1行ずつの説明はなくてもよい。特に第1 引数，第2引数，．．．はどのようにして関数に運ばれるのか，関数の戻す値はどのように運ばれるのかに着目して説明しなさい。

引数の取り扱い，戻り値の取り扱いのルールを明らかにしておくと，Cプログラムからアセンブリで記述した関数を呼び出す場合や，アセンブリプログラムからCで書いた関数を呼び出す時の作法がわかる。

2．使用したプログラム
int ans1;
long int ans2;

int test1(int a, int b)
{
    int ret;
    ret=a-b;
    return ret;
}

int test2(int a, int b, int c)
{
    int ret;
    ret=a-b-(c-1);
    return ret;
}

long int test3(long int a, long int b)
{
    long int ret;
    ret=a-b;
    return ret;
}

long int test4(long int a, long int b, long int c)
{
    long int ret;
    ret=a-b-(c-1);
    return ret;
}

int main(void)
{
    ans1=test1(0x123,0x456);
    ans1=test2(0x123,0x456,0x789);
    ans2=test3(0x123,0x456);
    ans2=test4(0x123,0x456,0x789);
}

3．関心を持ったこと
　引数を入れるレジスタは専用のものがあるのかと思っていたら，汎用のようなレジスタを使っていた．

4．考察
ーーーーーーーーーー実行結果ーーーーーーーーーー
         .CPU        300HA
          .EXPORT     _ans1
          .EXPORT     _ans2
          .EXPORT     _test1
          .EXPORT     _test2
          .EXPORT     _test3
          .EXPORT     _test4
          .EXPORT     _main
          .SECTION    P,CODE,ALIGN=2
;*** File C2asm03.c , Line 4     ; block
_test1:                          ; function: test1
;*** File C2asm03.c , Line 5     ; block
          MOV.W       R0,R1
;*** File C2asm03.c , Line 7     ; expression statement
          SUB.W       E0,R1
;*** File C2asm03.c , Line 8     ; return
          MOV.W       R1,R0
;*** File C2asm03.c , Line 9     ; block
          RTS
;*** File C2asm03.c , Line 11    ; block
_test2:                          ; function: test2
;*** File C2asm03.c , Line 12    ; block
          MOV.W       R0,E1
;*** File C2asm03.c , Line 14    ; expression statement
          SUB.W       E0,E1
          SUB.W       R1,E1
          INC.W       #1,E1
;*** File C2asm03.c , Line 15    ; return
          MOV.W       E1,R0
;*** File C2asm03.c , Line 16    ; block
          RTS
;*** File C2asm03.c , Line 18    ; block
_test3:                          ; function: test3
          PUSH.L      ER6
;*** File C2asm03.c , Line 19    ; block
          MOV.L       ER0,ER6
;*** File C2asm03.c , Line 21    ; expression statement
          SUB.L       ER1,ER6
;*** File C2asm03.c , Line 22    ; return
          MOV.L       ER6,ER0
;*** File C2asm03.c , Line 23    ; block
          POP.L       ER6
          RTS
;*** File C2asm03.c , Line 25    ; block
_test4:                          ; function: test4
          PUSH.L      ER6
;*** File C2asm03.c , Line 26    ; block
          MOV.L       ER0,ER6
;*** File C2asm03.c , Line 28    ; expression statement
          SUB.L       ER1,ER6
          MOV.L       @(8:16,SP),ER0
          SUB.L       ER0,ER6
          INC.L       #1,ER6
;*** File C2asm03.c , Line 29    ; return
          MOV.L       ER6,ER0
;*** File C2asm03.c , Line 30    ; block
          POP.L       ER6
          RTS
;*** File C2asm03.c , Line 32    ; block
_main:                           ; function: main
;*** File C2asm03.c , Line 33    ; block
;*** File C2asm03.c , Line 34    ; expression statement
          MOV.W       #1110:16,E0
          MOV.W       #291:16,R0
          BSR         _test1:8
          MOV.W       R0,@_ans1:24
;*** File C2asm03.c , Line 35    ; expression statement
          MOV.W       #1929:16,R1
          MOV.W       #1110:16,E0
          MOV.W       #291:16,R0
          BSR         _test2:8
          MOV.W       R0,@_ans1:24
;*** File C2asm03.c , Line 36    ; expression statement
          MOV.L       #1110:32,ER1
          MOV.L       #291:32,ER0
          BSR         _test3:8
          MOV.L       ER0,@_ans2:24
;*** File C2asm03.c , Line 37    ; expression statement
          MOV.L       #1929:32,ER0
          PUSH.L      ER0
          MOV.L       #1110:32,ER1
          MOV.L       #291:32,ER0
          BSR         _test4:8
          ADDS.L      #4,SP
          MOV.L       ER0,@_ans2:24
;*** File C2asm03.c , Line 38    ; block
          RTS
          .SECTION    B,DATA,ALIGN=2
_ans1:                           ; static: ans1
          .RES.W      1
_ans2:                           ; static: ans2
          .RES.L      1
          .END
ーーーーーーーーーーーーーーーーーーーーーーーー
　この実験より，引数はE0やR0，E1などを使っていることがわかった．
また，レジスタはおそらくスタックを使用して関数内や，戻り値として関数外に持って行くようにしているのだと考えた．

5．まとめ
　今回の実験で，関数の引数がコンパイラでどうやって処理されているかが理解できた．このことを生かしてこれからのプログラムを書いていきたい．

