mon1ex05.txt
s15023 岩崎悠紀

１．課題
FF200から機械語プログラムを置きなさい。
スタックポインタにFFF00をセットする。
レジスタER0にff0088ccをセットする。
レジスタER0をpushする。
レジスタER2にpopする。

作成したプログラム本体を報告に載せなさい。

1命令ずつ実行すると
ER0,ER2,PC（プログラムカウンタ）SP（スタックポインタ，ER7と同じ）,FFEF0からFFF00までのメモリの様子
はどうなるか，観察して，全実行結果を報告しなさい。

push命令実行直前のスタックポインタの値，実行直後のスタックポインタの値，どのレジスタの内容がどこのアドレスのメモリに格納されたのか，
（ここでは4バイトの値のはずなので，何番地から何番地までのメモリに格納されたのか），関連を考えて考察の文中 に盛り込みなさい。
pop命令実行直前のスタックポインタの値，実行直後のスタックポインタの値，どこのメモリの内容がどこのレジスタに書き戻されたか
（ここでは4バイトの値のはずなので，何番地から何番地までのメモリから書き戻されたのか），関連を考えて考察の文中に盛り込みなさい。

「push.l er0」によってなにが起こるのか，まとめに盛り込みなさい。
「pop.l er2」によってなにが起こるのか，まとめに盛り込みなさい。

２．使用したプログラム
FF200   7A07000FFF00          MOV.L      #H'000FFF00:32,ER7
FF206   7A00FF0088CC          MOV.L      #H'FF0088CC:32,ER0
FF20C   01006DF0              PUSH.L     ER0
FF210   01006D72              POP.L      ER2

３．調べたこと
　スタックとはFILO(First Input Last Out)の仕組みになっていて，データをどんどん積み重ねていくような構造になっている．キュー(FIFO)とは反対の構造になっていた．

４．考察
ーーーーーーーーーーーーー実行結果ーーーーーーーーーーーーー
: s
  PC=0FF206  CCR=80:I.......  SP=000FFF00
  ER0=00000000  ER1=00000000  ER2=00000000  ER3=00000000
  ER4=00000000  ER5=00000000  ER6=00000000  ER7=000FFF00
  FF200   7A07000FFF00          MOV.L      #H'000FFF00:32,ER7
: s
  PC=0FF20C  CCR=88:I...N...  SP=000FFF00
  ER0=FF0088CC  ER1=00000000  ER2=00000000  ER3=00000000
  ER4=00000000  ER5=00000000  ER6=00000000  ER7=000FFF00
  FF206   7A00FF0088CC          MOV.L      #H'FF0088CC:32,ER0
: s
  PC=0FF210  CCR=88:I...N...  SP=000FFEFC
  ER0=FF0088CC  ER1=00000000  ER2=00000000  ER3=00000000
  ER4=00000000  ER5=00000000  ER6=00000000  ER7=000FFEFC
  FF20C   01006DF0              PUSH.L     ER0
: s
  PC=0FF214  CCR=88:I...N...  SP=000FFF00
  ER0=FF0088CC  ER1=00000000  ER2=FF0088CC  ER3=00000000
  ER4=00000000  ER5=00000000  ER6=00000000  ER7=000FFF00
  FF210   01006D72              POP.L      ER2
ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー
　push命令では，命令を実行するとスタックポインタが命令分のバイト数増える．オペランドのレジスタの値が，実行直前のスタックポインタの場所から，実行後のスタックポインタの場所までの番地に入る．
　pop命令では，push命令の逆で，スタックポインタは命令で指定したバイト数分減り，スタックポインタのアドレスからレジスタに書き戻される．
　この場合ではpush命令では，0x000FFEFC-0x000FFF00のアドレスのメモリにデータが格納され，pop命令では，0x000FFEFC-0x000FFF00のアドレスのメモリが書き戻された．

5．まとめ
　push.l er0は，er0の4byteのデータを，スタックにプッシュする．
　push.l er2は，er2にスタックのデータを4byte分ポップする．
　今回の実験で，スタックの扱いについて理解できた．スタックの使用用途については，推測だが，おそらくマルチタスク処理などで使うものであると考えた．


5．まとめ

