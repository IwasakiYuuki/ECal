mon1ex02.txt
s15023 岩崎悠紀

1．課題
FF200から機械語プログラムを置きなさい。
FF700,FF701番地の2byteデータをレジスタR0に載せる
FF702,FF703番地の2byteデータをレジスタR1に載せる
R0からR1の値を引いてR0にしまう
R0のデータをFF704,FF705番地にしまう


作成したプログラム本体を報告に載せなさい。


実行時に，FF700,FF701番地の2byteデータにはab78を
FF702,FF703番地の2byteデータには7643をセットして全作業を報告しなさい。


ただし，以下の内容を含むこと
実行前のFF700番地?FF70F番地の様子
プログラムの逆アッセンブル結果
１命令ごとに実行して実行の様子
実行後のFF700番地?FF70F番地の様子

また，ｓコマンドで1ステップ進めるごとに，PC（プログラムカウンタ）
の値が変化するが，変化量は何に依存しているのかを考察に含めなさい。


2．使用したプログラム
  <ADDR>  <CODE>                <MNEMONIC> <OPERAND>
  FF200   6B20000FF700          MOV.W      @H'FF700:24,R0
  FF206   6B21000FF702          MOV.W      @H'FF702:24,R1
  FF20C   0910                  ADD.W      R1,R0
  FF20E   6B21000FF704          MOV.W      @H'FF704:24,R1
  FF214   0910                  ADD.W      R1,R0
  FF216   6B21000FF706          MOV.W      @H'FF706:24,R1
  FF21C   0910                  ADD.W      R1,R0
  FF21E   6BA0000FF708          MOV.W      R0,@H'FF708:24

3．調べたこと
プログラム内で演算をするにはメモリ上の値は一度レジスタにコピーしてからでないとできないということが調べた結果わかった．

4．考察
ーーーーーーーーーーー実行結果ーーーーーーーーーーーーー
  <ADDR>                  <  D  A  T  A  >                     < ASCII CODE >
  FF700   00 01 00 12 00 22 00 31  FF EF BB 7F 6F FF FF BF   ".....".1....o..."
  FF710   FF                                                 "."

  <ADDR>  <CODE>                <MNEMONIC> <OPERAND>
  FF200   6B20000FF700          MOV.W      @H'FF700:24,R0
  FF206   6B21000FF702          MOV.W      @H'FF702:24,R1
  FF20C   0910                  ADD.W      R1,R0
  FF20E   6B21000FF704          MOV.W      @H'FF704:24,R1
  FF214   0910                  ADD.W      R1,R0
  FF216   6B21000FF706          MOV.W      @H'FF706:24,R1
  FF21C   0910                  ADD.W      R1,R0
  FF21E   6BA0000FF708          MOV.W      R0,@H'FF708:24

: s
  PC=0FF206  CCR=80:I.......  SP=000FFF00
  ER0=00000001  ER1=00000000  ER2=00000000  ER3=00000000
  ER4=00000000  ER5=00000000  ER6=00000000  ER7=000FFF00
  FF200   6B20000FF700          MOV.W      @H'FF700:24,R0
: s
  PC=0FF20C  CCR=80:I.......  SP=000FFF00
  ER0=00000001  ER1=00000012  ER2=00000000  ER3=00000000
  ER4=00000000  ER5=00000000  ER6=00000000  ER7=000FFF00
  FF206   6B21000FF702          MOV.W      @H'FF702:24,R1
: s
  PC=0FF20E  CCR=80:I.......  SP=000FFF00
  ER0=00000013  ER1=00000012  ER2=00000000  ER3=00000000
  ER4=00000000  ER5=00000000  ER6=00000000  ER7=000FFF00
  FF20C   0910                  ADD.W      R1,R0
: s
  PC=0FF214  CCR=80:I.......  SP=000FFF00
  ER0=00000013  ER1=00000022  ER2=00000000  ER3=00000000
  ER4=00000000  ER5=00000000  ER6=00000000  ER7=000FFF00
  FF20E   6B21000FF704          MOV.W      @H'FF704:24,R1
: s
  PC=0FF216  CCR=80:I.......  SP=000FFF00
  ER0=00000035  ER1=00000022  ER2=00000000  ER3=00000000
  ER4=00000000  ER5=00000000  ER6=00000000  ER7=000FFF00
  FF214   0910                  ADD.W      R1,R0
: s
  PC=0FF21C  CCR=80:I.......  SP=000FFF00
  ER0=00000035  ER1=00000031  ER2=00000000  ER3=00000000
  ER4=00000000  ER5=00000000  ER6=00000000  ER7=000FFF00
  FF216   6B21000FF706          MOV.W      @H'FF706:24,R1
: s
  PC=0FF21E  CCR=80:I.......  SP=000FFF00
  ER0=00000066  ER1=00000031  ER2=00000000  ER3=00000000
  ER4=00000000  ER5=00000000  ER6=00000000  ER7=000FFF00
  FF21C   0910                  ADD.W      R1,R0
: s
  PC=0FF224  CCR=80:I.......  SP=000FFF00
  ER0=00000066  ER1=00000031  ER2=00000000  ER3=00000000
  ER4=00000000  ER5=00000000  ER6=00000000  ER7=000FFF00
  FF21E   6BA0000FF708          MOV.W      R0,@H'FF708:24

  <ADDR>                  <  D  A  T  A  >                     < ASCII CODE >
  FF700   00 01 00 12 00 22 00 31  00 66 BB 7F 6F FF FF BF   ".....".1.f..o..."
  FF710   FF                                                 "."
ーーーーーーーーーーーーーーーーーーーーーーーーーーーー
　PCの増加分はメモリに実際に書き込んだ命令のバイト数に応じて変化していると考えた．また，4つの値の和は66になるのが正解で，アドレスのff708番地からの2バイトに値が書き込まれてあった．また，値は66になっていた．

5．まとめ
　今回の実験により，実際にアセンブリでaddの命令が実行できるようになったので，これにより必然的に四則演算もできるようになった．

