mon2ex09.txt
s15023 岩崎悠紀

１．課題
挑戦課題（挽回課題）．テキストエディタとアセンブラを用 いて次のプログラムを作成しなさい。
FF200から機械語プログラムを置きなさい。
FF800番地 - FF801番地に2バイトの値Aが，FF802番地 - FF803番地に2バイトの値B があり，
それぞれ整数であるとして，この2数の商（A/B）と余り（A%B）を求め，
FF804番地 - FF805番地とFF806番地 - FF807番地に保存するプログラム。
値が正の数・負の数にかかわらず「正の余り」を持ち，
「（A - 余 り）÷B＝商」の関係をもつこと。
以下の例で検証しなさい。
11÷4 ＝ 2...余り3
(-11)÷4 = -3...余り1
11÷(-4) = -2...余り3
(-11)÷(-4) = 3...余り1
0による割り算は行わないものとする。

ただしDIVで始まる割算命令を用いてはならない。

プログラム本体および以下を報告しなさい。
プログラムが正しく動作していることを検証し，検証の様子も報告しなさい。

２．使用したプログラム
          .CPU        300HA
          .EXPORT     _x00
          .EXPORT     _x10
          .EXPORT     _x0
          .EXPORT     _x1
          .EXPORT     _x2
          .EXPORT     _main
          .SECTION    P,CODE,ALIGN=2
    	  .SECTION A,DATA,LOCATE=H'0FF030
    	  .DATA.L H'0FF200  ;ZbgxNg

    	  .SECTION P,CODE,LOCATE=H'0FF200
;*** File myTest.c  , Line 6     ; block
_main:                           ; function: main
;*** File myTest.c  , Line 7     ; block
          MOV.L       #_x2:32,ER4
          MOV.L       #_x0:32,ER5
          MOV.L       #_x1:32,ER6
;*** File myTest.c  , Line 11    ; expression statement
          MOV.W       @_x00:24,R0
          MOV.W       R0,@ER5
;*** File myTest.c  , Line 13    ; expression statement
          MOV.W       @_x10:24,R0
          MOV.W       R0,R2
          MOV.W       R0,@ER6
;*** File myTest.c  , Line 14    ; if
          MOV.W       @ER5,R0
          BLE         L65:8
;*** File myTest.c  , Line 14    ; block
;*** File myTest.c  , Line 15    ; if
          MOV.W       @ER6,R0
          BLE         L66:8
;*** File myTest.c  , Line 15    ; block
;*** File myTest.c  , Line 16    ; expression statement
          SUB.W       E0,E0
          BRA         L68:8
L66:                              
;*** File myTest.c  , Line 17    ; block
;*** File myTest.c  , Line 18    ; expression statement
          MOV.W       #1:16,E0
;*** File myTest.c  , Line 19    ; expression statement
          MOV.W       @ER6,R0
          NEG.W       R0
          MOV.W       R0,@ER6
          BRA         L68:8
L65:                              
;*** File myTest.c  , Line 21    ; block
;*** File myTest.c  , Line 22    ; if
          MOV.W       @ER6,R0
          BLE         L69:8
;*** File myTest.c  , Line 22    ; block
;*** File myTest.c  , Line 23    ; expression statement
          MOV.W       #2:16,E0
;*** File myTest.c  , Line 24    ; expression statement
          MOV.W       @ER5,R0
          NEG.W       R0
          MOV.W       R0,@ER5
          BRA         L70:8
L69:                              
;*** File myTest.c  , Line 25    ; block
;*** File myTest.c  , Line 26    ; expression statement
          MOV.W       #3:16,E0
;*** File myTest.c  , Line 27    ; expression statement
          MOV.W       @ER6,R0
          NEG.W       R0
          MOV.W       R0,@ER6
;*** File myTest.c  , Line 28    ; expression statement
          MOV.W       @ER5,R0
          NEG.W       R0
          MOV.W       R0,@ER5
;*** File myTest.c  , Line 29    ; expression statement
          MOV.W       R2,R0
          NEG.W       R0
          MOV.W       R0,R2
L70:                              
L68:                              
;*** File myTest.c  , Line 32    ; expression statement
          SUB.W       R0,R0
          MOV.W       R0,@ER4
;*** File myTest.c  , Line 33    ; expression statement
          MOV.W       #1:16,E1
;*** File myTest.c  , Line 34    ; while
          BRA         L72:8
L71:                              
;*** File myTest.c  , Line 34    ; block
;*** File myTest.c  , Line 35    ; expression statement
          MOV.W       @ER6,R0
          SHLL.W      R0
          MOV.W       R0,@ER6
;*** File myTest.c  , Line 36    ; expression statement
          SHLL.W      E1
L72:                              
;*** File myTest.c  , Line 34    ; expression statement
          MOV.W       @ER6,R0
          MOV.W       @ER5,R1
          CMP.W       R1,R0
          BLT         L71:8
;*** File myTest.c  , Line 38    ; while
          BRA         L74:8
L73:                              
;*** File myTest.c  , Line 38    ; block
;*** File myTest.c  , Line 39    ; if
          MOV.W       @ER6,R0
          MOV.W       @ER5,R1
          CMP.W       R1,R0
          BGT         L75:8
;*** File myTest.c  , Line 39    ; block
;*** File myTest.c  , Line 40    ; expression statement
          SUB.W       R0,R1
          MOV.W       R1,@ER5
;*** File myTest.c  , Line 41    ; expression statement
          MOV.W       @ER4,R0
          ADD.W       E1,R0
          MOV.W       R0,@ER4
L75:                              
;*** File myTest.c  , Line 43    ; expression statement
          MOV.W       @ER6,R0
          SHAR.W      R0
          MOV.W       R0,@ER6
;*** File myTest.c  , Line 44    ; expression statement
          SHAR.W      E1
L74:                              
;*** File myTest.c  , Line 38    ; expression statement
          MOV.W       E1,E1
          BNE         L73:8
;*** File myTest.c  , Line 47    ; if
          MOV.W       E0,E0
          BEQ         L77:8
;*** File myTest.c  , Line 47    ; block
;*** File myTest.c  , Line 48    ; if
          CMP.W       #1:16,E0
          BNE         L78:8
;*** File myTest.c  , Line 48    ; block
;*** File myTest.c  , Line 49    ; expression statement
          MOV.W       @ER4,R0
          NEG.W       R0
          MOV.W       R0,@ER4
          BRA         L79:8
L78:                              
;*** File myTest.c  , Line 50    ; block
;*** File myTest.c  , Line 51    ; if
          MOV.W       @ER5,R0
          BLE         L80:8
;*** File myTest.c  , Line 51    ; block
;*** File myTest.c  , Line 52    ; expression statement
          MOV.W       R2,R0
          MOV.W       @ER5,R1
          SUB.W       R1,R0
          MOV.W       R0,@ER5
;*** File myTest.c  , Line 53    ; expression statement
          MOV.W       @ER4,R0
          INC.W       #1,R0
          MOV.W       R0,@ER4
L80:                              
;*** File myTest.c  , Line 55    ; if
          CMP.W       #2:16,E0
          BNE         L81:8
;*** File myTest.c  , Line 55    ; block
;*** File myTest.c  , Line 56    ; expression statement
          MOV.W       @ER4,R0
          NEG.W       R0
          MOV.W       R0,@ER4
L81:                              
L79:                              
L77:                              
;*** File myTest.c  , Line 59    ; return
          SUB.W       R0,R0
;*** File myTest.c  , Line 60    ; block
          .SECTION    B,DATA,ALIGN=2
          .SECTION D,DATA,LOCATE=H'0FF800
_x00:                            ; static: x00
          .RES.W      1
_x10:                            ; static: x10
          .RES.W      1
_x0:                             ; static: x0
          .RES.W      1
_x1:                             ; static: x1
          .RES.W      1
_x2:                             ; static: x2
          .RES.W      1
          .END

３．実行結果
: da ff200 ff2cf
  <ADDR>  <CODE>                <MNEMONIC> <OPERAND>
  FF200   7A04000FF804          MOV.L      #H'000FF804:32,ER4
  FF206   7A05000FF806          MOV.L      #H'000FF806:32,ER5
  FF20C   7A06000FF808          MOV.L      #H'000FF808:32,ER6
  FF212   6B20000FF800          MOV.W      @H'FF800:24,R0
  FF218   69D0                  MOV.W      R0,@ER5
  FF21A   6B20000FF802          MOV.W      @H'FF802:24,R0
  FF220   0D02                  MOV.W      R0,R2
  FF222   69E0                  MOV.W      R0,@ER6
  FF224   6950                  MOV.W      @ER5,R0
  FF226   4F14                  BLE        FF23C:8
  FF228   6960                  MOV.W      @ER6,R0
  FF22A   4F04                  BLE        FF230:8
  FF22C   1988                  SUB.W      E0,E0
  FF22E   4032                  BRA        FF262:8
  FF230   79080001              MOV.W      #H'0001:16,E0
  FF234   6960                  MOV.W      @ER6,R0
  FF236   1790                  NEG.W      R0
  FF238   69E0                  MOV.W      R0,@ER6
  FF23A   4026                  BRA        FF262:8
  FF23C   6960                  MOV.W      @ER6,R0
  FF23E   4F0C                  BLE        FF24C:8
  FF240   79080002              MOV.W      #H'0002:16,E0
  FF244   6950                  MOV.W      @ER5,R0
  FF246   1790                  NEG.W      R0
  FF248   69D0                  MOV.W      R0,@ER5
  FF24A   4016                  BRA        FF262:8
  FF24C   79080003              MOV.W      #H'0003:16,E0
  FF250   6960                  MOV.W      @ER6,R0
  FF252   1790                  NEG.W      R0
  FF254   69E0                  MOV.W      R0,@ER6
  FF256   6950                  MOV.W      @ER5,R0
  FF258   1790                  NEG.W      R0
  FF25A   69D0                  MOV.W      R0,@ER5
  FF25C   0D20                  MOV.W      R2,R0
  FF25E   1790                  NEG.W      R0
  FF260   0D02                  MOV.W      R0,R2
  FF262   1900                  SUB.W      R0,R0
  FF264   69C0                  MOV.W      R0,@ER4
  FF266   79090001              MOV.W      #H'0001:16,E1
  FF26A   4008                  BRA        FF274:8
  FF26C   6960                  MOV.W      @ER6,R0
  FF26E   1010                  SHLL.W     R0
  FF270   69E0                  MOV.W      R0,@ER6
  FF272   1019                  SHLL.W     E1
  FF274   6960                  MOV.W      @ER6,R0
  FF276   6951                  MOV.W      @ER5,R1
  FF278   1D10                  CMP.W      R1,R0
  FF27A   4DF0                  BLT        FF26C:8
  FF27C   401A                  BRA        FF298:8
  FF27E   6960                  MOV.W      @ER6,R0
  FF280   6951                  MOV.W      @ER5,R1
  FF282   1D10                  CMP.W      R1,R0
  FF284   4E0A                  BGT        FF290:8
  FF286   1901                  SUB.W      R0,R1
  FF288   69D1                  MOV.W      R1,@ER5
  FF28A   6940                  MOV.W      @ER4,R0
  FF28C   0990                  ADD.W      E1,R0
  FF28E   69C0                  MOV.W      R0,@ER4
  FF290   6960                  MOV.W      @ER6,R0
  FF292   1190                  SHAR.W     R0
  FF294   69E0                  MOV.W      R0,@ER6
  FF296   1199                  SHAR.W     E1
  FF298   0D99                  MOV.W      E1,E1
  FF29A   46E2                  BNE        FF27E:8
  FF29C   0D88                  MOV.W      E0,E0
  FF29E   472C                  BEQ        FF2CC:8
  FF2A0   79280001              CMP.W      #H'0001:16,E0
  FF2A4   4608                  BNE        FF2AE:8
  FF2A6   6940                  MOV.W      @ER4,R0
  FF2A8   1790                  NEG.W      R0
  FF2AA   69C0                  MOV.W      R0,@ER4
  FF2AC   401E                  BRA        FF2CC:8
  FF2AE   6950                  MOV.W      @ER5,R0
  FF2B0   4F0E                  BLE        FF2C0:8
  FF2B2   0D20                  MOV.W      R2,R0
  FF2B4   6951                  MOV.W      @ER5,R1
  FF2B6   1910                  SUB.W      R1,R0
  FF2B8   69D0                  MOV.W      R0,@ER5
  FF2BA   6940                  MOV.W      @ER4,R0
  FF2BC   0B50                  INC.W      #1,R0
  FF2BE   69C0                  MOV.W      R0,@ER4
  FF2C0   79280002              CMP.W      #H'0002:16,E0
  FF2C4   4606                  BNE        FF2CC:8
  FF2C6   6940                  MOV.W      @ER4,R0
  FF2C8   1790                  NEG.W      R0
  FF2CA   69C0                  MOV.W      R0,@ER4
  FF2CC   1900                  SUB.W      R0,R0
  FF2CE   40FE                  BRA        FF2CE:8
: b ff2ce
: m ff800
  FF800   DF  ?  00
  FF801   EF  ?  0b
  FF802   F7  ?  00
  FF803   7F  ?  04
  FF804   F7  ?  .
: g
  Break at PC=FF2CE
  PC=0FF2CE  CCR=84:I....Z..  SP=000FFF00
  ER0=00000000  ER1=00000003  ER2=00000004  ER3=00000000
  ER4=000FF804  ER5=000FF806  ER6=000FF808  ER7=000FFF00
: d ff800 ff807
  <ADDR>                  <  D  A  T  A  >                     < ASCII CODE >
  FF800   00 0B 00 04 00 02 00 03                            "........"
: .pc ff200
: m ff800
  FF800   00  ?  ff
  FF801   0B  ?  f5
  FF802   00  ?  .
: g
  Break at PC=FF2CE
  PC=0FF2CE  CCR=84:I....Z..  SP=000FFF00
  ER0=00020000  ER1=00000003  ER2=00000004  ER3=00000000
  ER4=000FF804  ER5=000FF806  ER6=000FF808  ER7=000FFF00
: d ff800 ff807
  <ADDR>                  <  D  A  T  A  >                     < ASCII CODE >
  FF800   FF F5 00 04 FF FD 00 01                            "........"
: .pc
  PC=0FF2CE  ?  ff200
  CCR=84  ?  .
: m ff800
  FF800   FF  ?  00
  FF801   F5  ?  0b
  FF802   00  ?  ff
  FF803   04  ?  fc
  FF804   FF  ?  .
: g
  Break at PC=FF2CE
  PC=0FF2CE  CCR=84:I....Z..  SP=000FFF00
  ER0=00010000  ER1=00000003  ER2=0000FFFC  ER3=00000000
  ER4=000FF804  ER5=000FF806  ER6=000FF808  ER7=000FFF00
: d ff800 ff807
  <ADDR>                  <  D  A  T  A  >                     < ASCII CODE >
  FF800   00 0B FF FC FF FE 00 03                            "........"
: m ff800
  FF800   00  ?  ff
  FF801   0B  ?  f5
  FF802   FF  ?  .
: .pc
  PC=0FF2CE  ?  ff200
  CCR=84  ?  .
: g
  Break at PC=FF2CE
  PC=0FF2CE  CCR=84:I....Z..  SP=000FFF00
  ER0=00030000  ER1=00000003  ER2=00000004  ER3=00000000
  ER4=000FF804  ER5=000FF806  ER6=000FF808  ER7=000FFF00
: d ff800 ff807
  <ADDR>                  <  D  A  T  A  >                     < ASCII CODE >
  FF800   FF F5 FF FC 00 03 00 01                            "........"
:

４．考察
　実験結果と課題の文の中にある検証の例より，このプログラムは意図した動作をしていることがわかった．
　計算結果を表示している部分は，d ff800 ff807の部分で，意味は，0x0ff800-0x0ff807を表示するというものである．商の部分は0x0ff804-0x0ff805，あまりの部分は0x0ff806-0x0ff807という風になっている．

５．まとめ
　今回の実験により，Cプログラムからアセンブリプログラムに変換するやり方と，変換後に，どういう対応になっているか，また変換前をどう変えれば変換後にどういった影響があるかということがわかった．
